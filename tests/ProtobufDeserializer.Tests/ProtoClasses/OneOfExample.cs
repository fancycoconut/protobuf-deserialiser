// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: OneOfExample.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from OneOfExample.proto</summary>
public static partial class OneOfExampleReflection {

  #region Descriptor
  /// <summary>File descriptor for OneOfExample.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static OneOfExampleReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChJPbmVPZkV4YW1wbGUucHJvdG8iqgEKDE9uZU9mRXhhbXBsZRILCgNrZXkY",
          "ASABKAkSFAoKYm9vbF92YWx1ZRgCIAEoCEgAEhMKCWludF92YWx1ZRgDIAEo",
          "BUgAEhQKCnVpbnRfdmFsdWUYBCABKA1IABIVCgtmbG9hdF92YWx1ZRgFIAEo",
          "AkgAEhYKDHN0cmluZ192YWx1ZRgGIAEoCUgAEhQKCmJ5dGVfdmFsdWUYByAB",
          "KAxIAEIHCgV2YWx1ZWIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::OneOfExample), global::OneOfExample.Parser, new[]{ "Key", "BoolValue", "IntValue", "UintValue", "FloatValue", "StringValue", "ByteValue" }, new[]{ "Value" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class OneOfExample : pb::IMessage<OneOfExample> {
  private static readonly pb::MessageParser<OneOfExample> _parser = new pb::MessageParser<OneOfExample>(() => new OneOfExample());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<OneOfExample> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::OneOfExampleReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public OneOfExample() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public OneOfExample(OneOfExample other) : this() {
    key_ = other.key_;
    switch (other.ValueCase) {
      case ValueOneofCase.BoolValue:
        BoolValue = other.BoolValue;
        break;
      case ValueOneofCase.IntValue:
        IntValue = other.IntValue;
        break;
      case ValueOneofCase.UintValue:
        UintValue = other.UintValue;
        break;
      case ValueOneofCase.FloatValue:
        FloatValue = other.FloatValue;
        break;
      case ValueOneofCase.StringValue:
        StringValue = other.StringValue;
        break;
      case ValueOneofCase.ByteValue:
        ByteValue = other.ByteValue;
        break;
    }

    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public OneOfExample Clone() {
    return new OneOfExample(this);
  }

  /// <summary>Field number for the "key" field.</summary>
  public const int KeyFieldNumber = 1;
  private string key_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Key {
    get { return key_; }
    set {
      key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "bool_value" field.</summary>
  public const int BoolValueFieldNumber = 2;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool BoolValue {
    get { return valueCase_ == ValueOneofCase.BoolValue ? (bool) value_ : false; }
    set {
      value_ = value;
      valueCase_ = ValueOneofCase.BoolValue;
    }
  }

  /// <summary>Field number for the "int_value" field.</summary>
  public const int IntValueFieldNumber = 3;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int IntValue {
    get { return valueCase_ == ValueOneofCase.IntValue ? (int) value_ : 0; }
    set {
      value_ = value;
      valueCase_ = ValueOneofCase.IntValue;
    }
  }

  /// <summary>Field number for the "uint_value" field.</summary>
  public const int UintValueFieldNumber = 4;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint UintValue {
    get { return valueCase_ == ValueOneofCase.UintValue ? (uint) value_ : 0; }
    set {
      value_ = value;
      valueCase_ = ValueOneofCase.UintValue;
    }
  }

  /// <summary>Field number for the "float_value" field.</summary>
  public const int FloatValueFieldNumber = 5;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float FloatValue {
    get { return valueCase_ == ValueOneofCase.FloatValue ? (float) value_ : 0F; }
    set {
      value_ = value;
      valueCase_ = ValueOneofCase.FloatValue;
    }
  }

  /// <summary>Field number for the "string_value" field.</summary>
  public const int StringValueFieldNumber = 6;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string StringValue {
    get { return valueCase_ == ValueOneofCase.StringValue ? (string) value_ : ""; }
    set {
      value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      valueCase_ = ValueOneofCase.StringValue;
    }
  }

  /// <summary>Field number for the "byte_value" field.</summary>
  public const int ByteValueFieldNumber = 7;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString ByteValue {
    get { return valueCase_ == ValueOneofCase.ByteValue ? (pb::ByteString) value_ : pb::ByteString.Empty; }
    set {
      value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      valueCase_ = ValueOneofCase.ByteValue;
    }
  }

  private object value_;
  /// <summary>Enum of possible cases for the "value" oneof.</summary>
  public enum ValueOneofCase {
    None = 0,
    BoolValue = 2,
    IntValue = 3,
    UintValue = 4,
    FloatValue = 5,
    StringValue = 6,
    ByteValue = 7,
  }
  private ValueOneofCase valueCase_ = ValueOneofCase.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ValueOneofCase ValueCase {
    get { return valueCase_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearValue() {
    valueCase_ = ValueOneofCase.None;
    value_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as OneOfExample);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(OneOfExample other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Key != other.Key) return false;
    if (BoolValue != other.BoolValue) return false;
    if (IntValue != other.IntValue) return false;
    if (UintValue != other.UintValue) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FloatValue, other.FloatValue)) return false;
    if (StringValue != other.StringValue) return false;
    if (ByteValue != other.ByteValue) return false;
    if (ValueCase != other.ValueCase) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Key.Length != 0) hash ^= Key.GetHashCode();
    if (valueCase_ == ValueOneofCase.BoolValue) hash ^= BoolValue.GetHashCode();
    if (valueCase_ == ValueOneofCase.IntValue) hash ^= IntValue.GetHashCode();
    if (valueCase_ == ValueOneofCase.UintValue) hash ^= UintValue.GetHashCode();
    if (valueCase_ == ValueOneofCase.FloatValue) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FloatValue);
    if (valueCase_ == ValueOneofCase.StringValue) hash ^= StringValue.GetHashCode();
    if (valueCase_ == ValueOneofCase.ByteValue) hash ^= ByteValue.GetHashCode();
    hash ^= (int) valueCase_;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Key.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Key);
    }
    if (valueCase_ == ValueOneofCase.BoolValue) {
      output.WriteRawTag(16);
      output.WriteBool(BoolValue);
    }
    if (valueCase_ == ValueOneofCase.IntValue) {
      output.WriteRawTag(24);
      output.WriteInt32(IntValue);
    }
    if (valueCase_ == ValueOneofCase.UintValue) {
      output.WriteRawTag(32);
      output.WriteUInt32(UintValue);
    }
    if (valueCase_ == ValueOneofCase.FloatValue) {
      output.WriteRawTag(45);
      output.WriteFloat(FloatValue);
    }
    if (valueCase_ == ValueOneofCase.StringValue) {
      output.WriteRawTag(50);
      output.WriteString(StringValue);
    }
    if (valueCase_ == ValueOneofCase.ByteValue) {
      output.WriteRawTag(58);
      output.WriteBytes(ByteValue);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Key.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
    }
    if (valueCase_ == ValueOneofCase.BoolValue) {
      size += 1 + 1;
    }
    if (valueCase_ == ValueOneofCase.IntValue) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(IntValue);
    }
    if (valueCase_ == ValueOneofCase.UintValue) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UintValue);
    }
    if (valueCase_ == ValueOneofCase.FloatValue) {
      size += 1 + 4;
    }
    if (valueCase_ == ValueOneofCase.StringValue) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(StringValue);
    }
    if (valueCase_ == ValueOneofCase.ByteValue) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(ByteValue);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(OneOfExample other) {
    if (other == null) {
      return;
    }
    if (other.Key.Length != 0) {
      Key = other.Key;
    }
    switch (other.ValueCase) {
      case ValueOneofCase.BoolValue:
        BoolValue = other.BoolValue;
        break;
      case ValueOneofCase.IntValue:
        IntValue = other.IntValue;
        break;
      case ValueOneofCase.UintValue:
        UintValue = other.UintValue;
        break;
      case ValueOneofCase.FloatValue:
        FloatValue = other.FloatValue;
        break;
      case ValueOneofCase.StringValue:
        StringValue = other.StringValue;
        break;
      case ValueOneofCase.ByteValue:
        ByteValue = other.ByteValue;
        break;
    }

    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Key = input.ReadString();
          break;
        }
        case 16: {
          BoolValue = input.ReadBool();
          break;
        }
        case 24: {
          IntValue = input.ReadInt32();
          break;
        }
        case 32: {
          UintValue = input.ReadUInt32();
          break;
        }
        case 45: {
          FloatValue = input.ReadFloat();
          break;
        }
        case 50: {
          StringValue = input.ReadString();
          break;
        }
        case 58: {
          ByteValue = input.ReadBytes();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
