// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Info.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Fph.Kato.Info.V1Beta1 {

  /// <summary>Holder for reflection information generated from Info.proto</summary>
  public static partial class InfoReflection {

    #region Descriptor
    /// <summary>File descriptor for Info.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static InfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpJbmZvLnByb3RvEhVmcGgua2F0by5pbmZvLnYxYmV0YTEaHmdvb2dsZS9w",
            "cm90b2J1Zi93cmFwcGVycy5wcm90byKPAQoESW5mbxIsCgZzZXJpYWwYASAB",
            "KAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSLAoGZmFtaWx5GAIg",
            "ASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEisKBW1vZGVsGAMg",
            "ASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Fph.Kato.Info.V1Beta1.Info), global::Fph.Kato.Info.V1Beta1.Info.Parser, new[]{ "Serial", "Family", "Model" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Device info.
  /// </summary>
  public sealed partial class Info : pb::IMessage<Info> {
    private static readonly pb::MessageParser<Info> _parser = new pb::MessageParser<Info>(() => new Info());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fph.Kato.Info.V1Beta1.InfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Info(Info other) : this() {
      Serial = other.Serial;
      Family = other.Family;
      Model = other.Model;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Info Clone() {
      return new Info(this);
    }

    /// <summary>Field number for the "serial" field.</summary>
    public const int SerialFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_serial_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string serial_;
    /// <summary>
    /// Device serial number
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Serial {
      get { return serial_; }
      set {
        serial_ = value;
      }
    }


    /// <summary>Field number for the "family" field.</summary>
    public const int FamilyFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_family_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string family_;
    /// <summary>
    /// Device family name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Family {
      get { return family_; }
      set {
        family_ = value;
      }
    }


    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_model_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string model_;
    /// <summary>
    /// Device model
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Model {
      get { return model_; }
      set {
        model_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Serial != other.Serial) return false;
      if (Family != other.Family) return false;
      if (Model != other.Model) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (serial_ != null) hash ^= Serial.GetHashCode();
      if (family_ != null) hash ^= Family.GetHashCode();
      if (model_ != null) hash ^= Model.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (serial_ != null) {
        _single_serial_codec.WriteTagAndValue(output, Serial);
      }
      if (family_ != null) {
        _single_family_codec.WriteTagAndValue(output, Family);
      }
      if (model_ != null) {
        _single_model_codec.WriteTagAndValue(output, Model);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (serial_ != null) {
        size += _single_serial_codec.CalculateSizeWithTag(Serial);
      }
      if (family_ != null) {
        size += _single_family_codec.CalculateSizeWithTag(Family);
      }
      if (model_ != null) {
        size += _single_model_codec.CalculateSizeWithTag(Model);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Info other) {
      if (other == null) {
        return;
      }
      if (other.serial_ != null) {
        if (serial_ == null || other.Serial != "") {
          Serial = other.Serial;
        }
      }
      if (other.family_ != null) {
        if (family_ == null || other.Family != "") {
          Family = other.Family;
        }
      }
      if (other.model_ != null) {
        if (model_ == null || other.Model != "") {
          Model = other.Model;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_serial_codec.Read(input);
            if (serial_ == null || value != "") {
              Serial = value;
            }
            break;
          }
          case 18: {
            string value = _single_family_codec.Read(input);
            if (family_ == null || value != "") {
              Family = value;
            }
            break;
          }
          case 26: {
            string value = _single_model_codec.Read(input);
            if (model_ == null || value != "") {
              Model = value;
            }
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
